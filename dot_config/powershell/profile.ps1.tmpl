$global:profile_initialized = $false

# region Copied from Jaykul
trap { Write-Warning ($_.ScriptStackTrace | Out-String) }
# $InformationPreference = "Continue"
# I wish $Profile was in $Home, but since it's not:
$ProfileDir = $PSScriptRoot

# The XDG standard says use the variable and tells us how to calculate a fallback
$DataHome = if ($ENV:XDG_CONFIG_HOME) {
    $ENV:XDG_DATA_HOME
} else {
    [IO.Path]::Combine($HOME, ".local", "share")
}
$ConfigHome = if ($ENV:XDG_CONFIG_HOME) {
    $ENV:XDG_CONFIG_HOME
} else {
    [IO.Path]::Combine($HOME, ".config")
}

$Interactive = Convert-Path "$DataHome/powershell/Scripts/Initialize-Interactive.ps1"
if ($Host.UI.RawUI.KeyAvailable) {
    $Controlled = $false
    while ($Host.UI.RawUI.KeyAvailable -and ($key = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown,IncludeKeyUp"))) {
        if (!$Controlled -and $key.ControlKeyState -match "LeftCtrlPressed") {
            $Controlled = $true
        }
    }
    if ($Controlled) {
        Write-Host "Skipping Interactive Config. To complete, run:`n. `"$Interactive`"`nInitialize-Profile" -ForegroundColor Yellow
        if ($PSVersionTable.PSVersion.Major -gt 5) {
            function prompt { "`e[36m$($MyInvocation.HistoryId)`e[37m $pwd`e[0m`n‚ùØ" }
        } else {
            function prompt { "$([char]27)[36m$($MyInvocation.HistoryId)$([char]27)[37m $pwd$([char]27)[0m`n$([char]0x276f)" }
        }
        return
    }
}
# regionend

# Load extra functions
@(
  "WorkFunctions.ps1",
  "Functions.ps1",
  "ShellIntegration.ps1",
  "Initialize-Profile.ps1"
) | ForEach-Object {
  $path = "$DataHome/powershell/Scripts/$_"
  if (Test-Path $path -ErrorAction SilentlyContinue) {
    . (Convert-Path $path)
  }
}

# Starship overwrite the prompt. Do this so its available on first open.
# There is a cost for this but it should be minimal.
if (Get-Command 'starship' -ErrorAction SilentlyContinue) {
  Invoke-Expression (&starship init powershell)
  function Invoke-Starship-PreCommand {
    if ($global:profile_initialized -ne $true) {
      $global:profile_initialized = $true
      Initialize-Profile
    }
  }
  # Update previous prompt with simpler prompt 
  function Invoke-Starship-TransientFunction {
    &starship prompt --profile short
  }
  Enable-TransientPrompt
} else {
  Write-Host "Preparing interactive session for first use..." -ForegroundColor Cyan
  function prompt {
      . (Convert-Path "$DataHome/powershell/Scripts/OldPrompt")
      if ($global:profile_initialized -ne $true) {
        $global:profile_initialized = $true
        Initialize-Profile
      }
  }
}